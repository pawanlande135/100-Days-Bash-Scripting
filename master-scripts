
#=====================================================================================
# Create a script that will take user name as input and then print the same on Screen.

#!/usr/bin/bash

echo "Please enter your name:"
read username

echo "Your username is : $username"
#=====================================================================================

# Create a script that will print "Even Day" if current date is an even number.


#!/usr/bin/bash

d=$(date +%d)

if [[ $((d%2)) -eq 0 ]] 

then 
    echo "Even Day"
else
    echo "Odd Day"
fi
#=====================================================================================
# Create a script that will print "OK" if current hour is an even number 

#!/usr/bin/bash

d=$(date +%H)

if [[ $((d%2)) -eq 0 ]] 

then 
    echo "Even Hour"
else
    echo "Odd Hour"
fi 
#=====================================================================================
# Create a script that will check if number is less 100 and then prints "less than 100" else prints "greater than 100"

#!/usr/bin/bash


#echo "Please enter the number that you want to check:"
read -p "Please enter the number that you want to check: " val 


if [[ $val -lt 100 ]] 

then 
    echo "Entered number is less than 100"
else
    echo "Entered number is greater than 100"
fi 
#=====================================================================================
# Create a script that will check if number is divisible by 10 and then prints "divisible by 10" else prints "not divisible by 10" (use CLA)


#!/usr/bin/bash


val=$1


if [[ $((val%10)) -eq 0 ]] 

then 
    echo "Divisible by 10"
else
    echo "Not divisible by 10"
fi
#===================================================================================== 

# Write a script that will ask username and password from user and then 
#using if condition verify if username="admin" and password="admin" , 
#if condition meets then print "Login Success" else print "Wrong Login" ?


read -p "Enter username: " username
read -p "Enter password: " password

if [[ "$username" == "admin" && "$password" == "admin" ]]; then
    echo "Login Success"
else
    echo "Wrong Login"
fi
#===================================================================================== 

#Write a script that will ask a number from user 
#then using if condition verify if number is divisible by 3 and 5 both , 
#if condition meets then print "Divisible" else print "Not Divisible" ?

read -p "Enter a number: " val

div3=$(($val%3))
div5=$(($val%5))


if [[ $div3 -eq 0  &&  $div5 -eq 0 ]]
then 

   echo "Number is divisible by both"
   
   else 
      echo "Number is non-divisible by both"
	  
	  fi

#=====================================================================================


#Write a script that will ask a number from user 
#then using if condition verify if number is divisible by 3 or 5 or 7 (any one) , 
#if condition meets then print "Divisible" else print "Not Divisible" ?
 
 
#i/usr/bin/bash


read -p "Enter the number that you want to test:" val

div3=$(($val%3))
div5=$(($val%5))
div7=$(($val%7))


if [[ $div3 -eq 0 || $div5 -eq 0 || $div7 -eq 0 ]]

then 
  echo "This is Divisible"
  
else 
  echo "Non-Divisible"
  
  fi
#=====================================================================================

#Write a script that will print numbers 1 to 20 on screen using for loop ?

#!/usr/bin/bash

for i in {1..20}

do 


echo -n "$i"  # -n option is used to avoid newline after each number
sleep 0.5 
echo -n " "    # Adding a space between numbers
done

#=====================================================================================

#Write a script that will create a directory with name "dummy" 
#then generate 10 empty files named like 1, 2 ... 10 in that dummy directory using for loop ?

#!/usr/bin/bash

mkdir dummy
cd dummy

for i in {1..10}
do
  touch $i.txt
  echo "File $i.txt created."
done

#=====================================================================================

#Write a script that will iterate between 1 to 100 and print all numbers divisible by 5 ?
 
 
#i/usr/bin/bash

for i in {1..100}

do

if [[ $((i%5)) -eq 0 ]]
then 
echo "$i is divisible by 5"
fi

done
#=====================================================================================

#Write a script that will print numbers 1 to 10 on screen using while loop ?

#!/usr/bin/bash

i=1
while [[ $i -lt 10 ]]

do

echo -n $i
sleep 0.4
echo -n " "

((i++))

done

#=====================================================================================
#Write a script that will keep running (using while loop) with "sleep 1" command until user press ctrl+c to kill it ?


#!/bin/bash

while :   # Infinite loop

do

echo "Press <CTRL+C> to exit the script"
sleep 1  # Sleep for 1 second



done
#=====================================================================================
#Write a script that will keep printing numbers from 1 to 10, 
#if the number in loop is 2 then loop must break and shall not continue to print ?


#!/bin/bash

i=0

while [[ $i -lt 10 ]]

do
echo -n $i 
sleep 0.4
echo -n " "
if [[ $i -eq 2 ]]
then
  echo  "Breaking the loop at number 2"
  break
fi

((i++))
done
#=====================================================================================

#Write a script that will keep printing numbers from 1 to 5, 
#skip if number is 3 (Use while loop and Continue statement) ?

#!/usr/bin/bash
i=0
while [[ $i -le 5 ]]

do 
((i++))
  if [[ $i -eq 3 ]]
  then 
    continue
    fi
echo $i
done
#=====================================================================================

# Write a script that will keep printing odd numbers between 1 to 100 ?
i=o


while [[ $i -lt 100 ]]
do
((i++))
if 
   [[ $(($i%2)) -ne 0 ]]
   then 
    echo -n $i
    echo -n " "
    sleep 0.2
	fi
	
done

#=====================================================================================


# Write a script that will keep printing Even numbers between 1 to 100 ?
i=o


while [[ $i -lt 100 ]]
do
((i++))
if 
   [[ $(($i%2)) -eq 0 ]]
   then 
    echo -n $i
    echo -n " "
    sleep 0.2
	fi
	
done
#=====================================================================================

#Write a script that will ask 2 numbers from user and then prints the sum of given 2 numbers ?


#!/usr/bin/bash

read -p "Please enter first Number:" a
read -p "Please enter second Number:" b 

s=$((a+b))

echo "Addition of both the above numbers is : $s"
#=====================================================================================

#Write a script that will ask 2 numbers from user and then prints the Multiplication of given 2 numbers ?


#!/usr/bin/bash

read -p "Please enter first Number:" a
read -p "Please enter second Number:" b 

s=$((a*b))

echo "Multiplication  of both the above numbers is : $s"

#=====================================================================================

#Write a script that will ask user to input directory path 
# script will count total number of files in the given directory ?

#!/usr/bin/bash

read -p "Enter the directory where you want to count the number of files:" dir 

echo "Number of files present in this directory is : $(ls -L $dir | wc -w)"

#=====================================================================================

#Write a script that will return the 10 largest directories and file (in terms of size) in the "/var/log" directory ?


#!/usr/bin/bash

du -ah /var/log | sort -rh | head -n 10
#=====================================================================================
#Write a script that will keep writing user inputs from terminal into a file , 
#until we press CTRL + D to save the changes ?      

#!/bin/bash

file=input.log

echo  "Enter text (Press CTRL+D to save and exit): " 

while read line

do 
echo $line >> $file
done
#=====================================================================================

#Write a script that will keep writing user inputs from terminal into a file , 
#until we press CTRL + D to save the changes ?      

#!/usr/bin/bash


d=$(date +%d)
if [[ $d -lt 10 ]]
then 
  echo "Less than 10"
  
elif  [[ $d -gt 10 ]]
then 
     echo "Greater than 10"
else 
  echo "Equals to 10"
  fi

#=====================================================================================
#Write a script in which we must  use a function  named as sum, 
#which will be triggered to calculate the sum of 2 numbers provided by user at runtime ?


#!/usr/bin/bash

function sum()
{

read -p "enter first number :" n1
read -p  "enter second number :" n2

echo "The sum of both the numbers is $((n1+n2))"
}

# Trigger the function
sum
#=====================================================================================





